proc AmritaUtilize {
  root
  purge = no
  first = yes
  USE
} <-> Build::
require amrita::kit >= AMRITAv2.29_R17-05-2005
if( "$first" eq "yes" ) then
  tokenpath <-> Build::
    set first = no
    fold::amrita { set tokens Build::
        set EOSlib #= `(cd $amrita::thisdir/../..; pwd)`
        chop Build::EOSlib
        fold::info { James, Amrita syntax error
               chop EOSlib
             does not work.
             It appears that chop doesn't use namespace
             set by tokenpath
               - Ralph
        }
        set src    = $EOSlib/src
        if( !token(root) ) then
          set root = $EOSlib/Amrita
        endif
        set bin    = $root/bin
        set inc    = $root/include
        set lib    = $root/lib
        set AMRSRC = $lib/AMRSRC
        fold::amrita { USE version
          if( ! token(USE) ) then
              set USE = $amrita::thisdir/use/$amrita::SYSTEM
              if( -e "$USE/Version" ) then
                  parse <file> $USE/Version
                  set USE .= /$version
              endif
              if( !(-e "$USE/amrcxx.defs" || -e "$USE/amrcss.flags") ) then
                  error EOSlib Build needs file $USE/amrcxx.{defs,flags}
              end if
          end if
        }
    }
    fold::amrita { Clean start ?
      if( "$purge" eq "yes" ) then
          foreach dir ( $bin,$inc,$lib,$AMRSRC )
            if( -e "$dir" ) then
              execute 'rm' -r $dir
            end if
          end foreach
      end if
    }
    fold::amrita { directories exist ?
        foreach dir ( $bin,$inc,$lib,$AMRSRC )
          if( ! -e "$dir" ) then
            mkdir $dir
          end if
        end foreach
        if( ! -e "$inc/backward" ) then
            execute 'cp' -r $src/backward $inc
        end if
    }
  tokenpath
  autopath +$amrita::thisdir/lib
  Support
end if
end proc
