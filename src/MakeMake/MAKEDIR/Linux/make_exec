#  MakeFile generated by MakeMake with make_exec template (Linux version)
#  should be called by Compile to set CWD, OS and STDCDIR 

#version=-V  4.1.2 20070626 (Red Hat 4.1.2-14)
version=
C_COMPL=gcc ${version}
#CFLAGS=-fpic -m64 -march=core2
CFLAGS=-fpic

CC_COMPL=g++ ${version}
#CCFLAGS=-rdynamic
#CCFLAGS=-fpic -Ur
#CCFLAGS=-fpic -m64 -march=core2
CCFLAGS=-fpic

F_COMPL=g77 ${version}
#FFLAGS=
#FFLAGS=-fpic -m64
FFLAGS=-fpic


DFLAGS=-DLINUX
CWD=_CWD			# set by Compile
OS=_OS				# set by Compile
#STDCDIR=_STDCDIR		# set by Compile
#SYSLINKFLAGS=-L$(STDCDIR) -lstdc++
#LFLAGS=-L$(CC_LIB) $(SYSLINKFLAGS)
LFLAGS=-L$(CC_LIB)

#####

VERSION=
ECHO=echo

CC_INCLUDE=$(CWD)/include
CC_LIB=$(CWD)/lib/$(OS)

XIFLAGS=
IFLAGS=-I. -I$(CC_INCLUDE) -I$(CC_INCLUDE)/backward $(XIFLAGS)
IFLAGS_SUB=-I.. -I$(CC_INCLUDE) -I$(CC_INCLUDE)/backward $(XIFLAGS)

INCLUDE_DIR=$(CC_INCLUDE)
EXEC_DIR=$(CWD)/bin
LIB_DIR=$(CC_LIB)

DEBUG=-ggdb

ALL=SubMake LIBS $(EXECS)

.MACROS
.INCLUDE_DEPENDENCIES

####################################################

# Suffix Rules #

.SUFFIXES:
.SUFFIXES: .o .c .C .f

.c.o:
	$(C_COMPL)  $(DEBUG) $(DFLAGS) $(CFLAGS)  $(IFLAGS) -c $<;
	
.C.o:
	$(CC_COMPL) $(DEBUG) $(DFLAGS) $(CCFLAGS) $(IFLAGS) -c $<;
	
.f.o:
	$(F_COMPL)  $(DEBUG) $(DFLAGS) $(FFLAGS)  $(IFLAGS) -c $<;
	
####################################################

HEADERS=HFILE[*].h

SUBS=SUB[*] 
SUB_LIBS=LIB[*] MERGE_LIB[*]

LIB_PREFIX=lib
LIB_TAG=.a

####################################################

EXECS=EXEC[*] 

all: $(ALL)

LIBS: $(SUB_LIBS)

SubMake: SUB[*]/MakeFile

############################

EXEC[i]: EXEC[i].o EXEC_LIB[i]
	$(COMPL[i]_COMPL) $(DEBUG) $(COMPL[i]FLAGS) $(LFLAGS) \
		-o EXEC[i] EXEC[i].o EXEC_LD[i]
	
############################

LIB[i] : SUB[i]/*.[hcCf]
	@$(ECHO)
	@rm -f LIB[i]
	cd SUB[i]; make -f MakeFile                         \
		"CWD=$(CWD)"           "OS=$(OS)"           \
                "DFLAGS=$(DFLAGS)"     "DEBUG=$(DEBUG)"     \
		"C_COMPL=$(C_COMPL)"   "CFLAGS=$(CFLAGS)"   \
		"CC_COMPL=$(CC_COMPL)" "CCFLAGS=$(CCFLAGS)" \
		"F_COMPL=$(F_COMPL)"   "FFLAGS=$(FFLAGS)"   \
		"IFLAGS=$(IFLAGS_SUB)";
	ln SUB[i]/lib.a LIB[i]
	@$(ECHO)

############################

SUB[i]/MakeFile: $(HEADERS) SUB[i]/*.[hcCf]
	cd SUB[i]; MakeMake *.[hcCf] > MakeFile             \
		"CWD=$(CWD)"           "OS=$(OS)"           \
                "DFLAGS=$(DFLAGS)"     "DEBUG=$(DEBUG)"     \
		"C_COMPL=$(C_COMPL)"   "CFLAGS=$(CFLAGS)"   \
		"CC_COMPL=$(CC_COMPL)" "CCFLAGS=$(CCFLAGS)" \
		"F_COMPL=$(F_COMPL)"   "FFLAGS=$(FFLAGS)"   \
		"IFLAGS=$(IFLAGS_SUB)";			    \
		make -f MakeFile Touch
			

############################

MERGE_LIB[i] : MERGE_SUBLIB[i]
	MergeLibs MERGE_LIB[i] MERGE_SUBLIB[i]
	
	
############################


HFILE[i].h : HFILE_DEP[i]
	touch HFILE[i].h

CFILE[i].c : CFILE_DEP[i]
	touch CFILE[i].c

CCFILE[i].C : CCFILE_DEP[i]
	touch CCFILE[i].C

FFILE[i].f : FFILE_DEP[i]
	touch FFILE[i].f


############################

.INCLUDE

############################

Version: Cleanup
	tar cvf ../$(PWD).tar$(VERSION) .

cleanup:
	rm -f a.out core tags *.o *% *~ temp.* junk* dummy* *.log *.dvi *.out *.so
	cd SUB[i]; make -f MakeFile cleanup

Cleanup: 
	rm -f a.out core tags *.o *% *~ temp.* junk* dummy* *.log *.dvi *.out *.so
	rm -f $(EXECS) $(SUB_LIBS)
	cd SUB[i]; make -f MakeFile Cleanup


############################


install: Cleanup InstallHeaders InstallLibs InstallExecs
	make -f MakeFile Cleanup

##

InstallHeaders: 
	@if [ INSTALL_HFILE[$] -gt 0 ] ; then                              \
	    if [ ! -z "$(INCLUDE_DIR)" -a  -d "$(INCLUDE_DIR)" ]; then     \
		make -f MakeFile "INCLUDE_DIR=$(INCLUDE_DIR)" INSTALL_HEADERS; \
	    else                                                           \
		$(ECHO) "Invalid Include Directory (INCLUDE_DIR)";             \
		exit 1;                                                        \
	    fi                                                             \
	fi
	
INSTALL_HEADERS:
	@if cmp -s INSTALL_HFILE[i] $(INCLUDE_DIR)/INSTALL_HFILE[i]; then  \
			$(ECHO) "\nINSTALL_HFILE[i] has not changed\n";            \
	else                                                               \
		cp INSTALL_HFILE[i] $(INCLUDE_DIR);                            \
	       $(ECHO) "\nINSTALL_HFILE[i] INSTALLED in $(INCLUDE_DIR)\n"; \
	fi

##

InstallLibs:
	@if [ INSTALL_LIB[$] -gt 0 ]; then                                 \
	    if [ ! -z "$(LIB_DIR)" -a  -d "$(LIB_DIR)" ]; then             \
		make -f MakeFile                                               \
		     "CWD=$(CWD)"               "OS=$(OS)"                     \
             "DFLAGS=$(DFLAGS)"         "DEBUG=$(DEBUG)"               \
		     "C_COMPL=$(C_COMPL)"       "CFLAGS=$(CFLAGS)"             \
		     "CC_COMPL=$(CC_COMPL)"     "CCFLAGS=$(CCFLAGS)"           \
		     "F_COMPL=$(F_COMPL)"       "FFLAGS=$(FFLAGS)"             \
		     "IFLAGS=-I$(INCLUDE_DIR)     -I$(INCLUDE_DIR)/backward $(XIFLAGS)"                 \
             "IFLAGS_SUB=-I$(INCLUDE_DIR) -I$(INCLUDE_DIR)/backward $(XIFLAGS)"                 \
             "LFLAGS=$(LFLAGS)"         "LIB_DIR=$(LIB_DIR)"           \
             "LIB_PREFIX=$(LIB_PREFIX)" "LIB_TAG=$(LIB_TAG)"           \
		     INSTALL_LIBS ;                                            \
	    else                                                           \
		$(ECHO) "Invalid Library Directory (LIB_DIR)"; exit 1;         \
	    fi                                                             \
	fi


INSTALL_LIBS: INSTALL_LIB[*].a
	@cp INSTALL_LIB[i].a $(LIB_DIR)/$(LIB_PREFIX)INSTALL_LIB[i]$(LIB_TAG); \
	$(ECHO) "*** INSTALL_LIB[i] installed as                               \
		$(LIB_PREFIX)INSTALL_LIB[i]$(LIB_TAG) in directory $(LIB_DIR)"


##

InstallExecs:
	@if [ INSTALL_EXEC[$] -gt 0 ]; then                                \
	    if [ ! -z "$(EXEC_DIR)" -a -d "$(EXEC_DIR)" ]; then            \
		make -f MakeFile                                               \
		     "CWD=$(CWD)"               "OS=$(OS)"                     \
              "DFLAGS=$(DFLAGS)"         "DEBUG=$(DEBUG)"              \
		     "C_COMPL=$(C_COMPL)"       "CFLAGS=$(CFLAGS)"             \
		     "CC_COMPL=$(CC_COMPL)"     "CCFLAGS=$(CCFLAGS)"           \
		     "F_COMPL=$(F_COMPL)"       "FFLAGS=$(FFLAGS)"             \
		     "IFLAGS=-I$(INCLUDE_DIR)     -I$(INCLUDE_DIR)/backward $(XIFLAGS)"                 \
             "IFLAGS_SUB=-I$(INCLUDE_DIR) -I$(INCLUDE_DIR)/backward $(XIFLAGS)"                 \
             "LFLAGS=$(LFLAGS)"         "EXEC_DIR=$(EXEC_DIR)"         \
		      INSTALL_EXECS ;                                          \
	     else                                                          \
		$(ECHO) "Invalid Executable Directory (EXEC_DIR)"; exit 1;     \
	     fi                                                            \
	 fi


INSTALL_EXECS: INSTALL_EXEC[*]
	@cp INSTALL_EXEC[i] $(EXEC_DIR)/$(OS);                  \
	$(ECHO) "*** INSTALL_EXEC[i] INSTALLED in $(EXEC_DIR)";
	@for script in INSTALL_EXEC[*] ; do			            \
	    if [ -x $$script.sh ] ; then                        \
               cp $$script.sh $(EXEC_DIR) ;                 \
            fi                                              \
	 done
