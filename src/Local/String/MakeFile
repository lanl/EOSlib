# MakeFile generated by MakeMake with template make_lib (Linux version)
# should be called one level up with Compile
C_COMPL=gcc -DSTL
CFLAGS=-fpic
CC_COMPL=g++ -DSTL
#CCFLAGS=-rdynamic
#CCFLAGS=-Ur
CCFLAGS=-fpic
F_COMPL=g77 -DSTL
FFLAGS=-fpic
DFLAGS=-DLINUX
CWD=/home/childrj/git-repos/eoslib
#####
CC_INCLUDE=$(CWD)/include
DEBUG=-ggdb
IFLAGS=-I.. -I/home/childrj/git-repos/eoslib/include -I/home/childrj/git-repos/eoslib/include/backward 
LIB=lib.a
.SUFFIXES:
HEADERS=
CFILES= 
CCFILES=Cat.C SplitString.C Strdup.C 
FFILES= 
OFILES= Cat.o SplitString.o Strdup.o 
OBJECTS=$(OFILES)
$(LIB) : Cfiles  $(LIB)(Cat.o) $(LIB)(SplitString.o) $(LIB)(Strdup.o) 
Headers: $(HEADERS)
Cfiles: $(CFILES) $(CCFILES) $(FFILES)
	touch MakeFile
Objects: $(OBJECTS)
Touch: Headers Cfiles
############################
$(LIB)(Cat.o) : Cat.C
	$(CC_COMPL) $(DEBUG) $(DFLAGS) $(CCFLAGS) $(IFLAGS) -c Cat.C;
	ar ru $(LIB) Cat.o;
	rm Cat.o
	

$(LIB)(SplitString.o) : SplitString.C
	$(CC_COMPL) $(DEBUG) $(DFLAGS) $(CCFLAGS) $(IFLAGS) -c SplitString.C;
	ar ru $(LIB) SplitString.o;
	rm SplitString.o
	

$(LIB)(Strdup.o) : Strdup.C
	$(CC_COMPL) $(DEBUG) $(DFLAGS) $(CCFLAGS) $(IFLAGS) -c Strdup.C;
	ar ru $(LIB) Strdup.o;
	rm Strdup.o
	

############################
Cat.C : ../String.h 
	touch Cat.C

SplitString.C : ../String.h 
	touch SplitString.C

Strdup.C : ../String.h 
	touch Strdup.C

############################
cleanup:
	-rm -f *.o tags __.SYMDEF *% *~ junk* dummy* core *.out
Cleanup: cleanup
	-rm -f *.a
